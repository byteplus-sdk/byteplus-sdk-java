// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: vod/business/vod_media.proto

package com.byteplus.service.vod.model.business;

/**
 * Protobuf type {@code Byteplus.Vod.Models.Business.VodGetSubtitleInfoListData}
 */
public final class VodGetSubtitleInfoListData extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:Byteplus.Vod.Models.Business.VodGetSubtitleInfoListData)
    VodGetSubtitleInfoListDataOrBuilder {
private static final long serialVersionUID = 0L;
  // Use VodGetSubtitleInfoListData.newBuilder() to construct.
  private VodGetSubtitleInfoListData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private VodGetSubtitleInfoListData() {
    vid_ = "";
    fileSubtitleInfoList_ = java.util.Collections.emptyList();
    notExistFileIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new VodGetSubtitleInfoListData();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private VodGetSubtitleInfoListData(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            vid_ = s;
            break;
          }
          case 18: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              fileSubtitleInfoList_ = new java.util.ArrayList<com.byteplus.service.vod.model.business.VodFileSubtitleInfo>();
              mutable_bitField0_ |= 0x00000001;
            }
            fileSubtitleInfoList_.add(
                input.readMessage(com.byteplus.service.vod.model.business.VodFileSubtitleInfo.parser(), extensionRegistry));
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              notExistFileIds_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField0_ |= 0x00000002;
            }
            notExistFileIds_.add(s);
            break;
          }
          case 32: {

            totalCount_ = input.readInt32();
            break;
          }
          case 40: {

            offset_ = input.readInt32();
            break;
          }
          case 48: {

            pageSize_ = input.readInt32();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        fileSubtitleInfoList_ = java.util.Collections.unmodifiableList(fileSubtitleInfoList_);
      }
      if (((mutable_bitField0_ & 0x00000002) != 0)) {
        notExistFileIds_ = notExistFileIds_.getUnmodifiableView();
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.byteplus.service.vod.model.business.VodMedia.internal_static_Byteplus_Vod_Models_Business_VodGetSubtitleInfoListData_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.byteplus.service.vod.model.business.VodMedia.internal_static_Byteplus_Vod_Models_Business_VodGetSubtitleInfoListData_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.byteplus.service.vod.model.business.VodGetSubtitleInfoListData.class, com.byteplus.service.vod.model.business.VodGetSubtitleInfoListData.Builder.class);
  }

  public static final int VID_FIELD_NUMBER = 1;
  private volatile java.lang.Object vid_;
  /**
   * <pre>
   *视频ID
   * </pre>
   *
   * <code>string Vid = 1;</code>
   * @return The vid.
   */
  @java.lang.Override
  public java.lang.String getVid() {
    java.lang.Object ref = vid_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      vid_ = s;
      return s;
    }
  }
  /**
   * <pre>
   *视频ID
   * </pre>
   *
   * <code>string Vid = 1;</code>
   * @return The bytes for vid.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getVidBytes() {
    java.lang.Object ref = vid_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      vid_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int FILESUBTITLEINFOLIST_FIELD_NUMBER = 2;
  private java.util.List<com.byteplus.service.vod.model.business.VodFileSubtitleInfo> fileSubtitleInfoList_;
  /**
   * <pre>
   *字幕列表
   * </pre>
   *
   * <code>repeated .Byteplus.Vod.Models.Business.VodFileSubtitleInfo FileSubtitleInfoList = 2;</code>
   */
  @java.lang.Override
  public java.util.List<com.byteplus.service.vod.model.business.VodFileSubtitleInfo> getFileSubtitleInfoListList() {
    return fileSubtitleInfoList_;
  }
  /**
   * <pre>
   *字幕列表
   * </pre>
   *
   * <code>repeated .Byteplus.Vod.Models.Business.VodFileSubtitleInfo FileSubtitleInfoList = 2;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.byteplus.service.vod.model.business.VodFileSubtitleInfoOrBuilder> 
      getFileSubtitleInfoListOrBuilderList() {
    return fileSubtitleInfoList_;
  }
  /**
   * <pre>
   *字幕列表
   * </pre>
   *
   * <code>repeated .Byteplus.Vod.Models.Business.VodFileSubtitleInfo FileSubtitleInfoList = 2;</code>
   */
  @java.lang.Override
  public int getFileSubtitleInfoListCount() {
    return fileSubtitleInfoList_.size();
  }
  /**
   * <pre>
   *字幕列表
   * </pre>
   *
   * <code>repeated .Byteplus.Vod.Models.Business.VodFileSubtitleInfo FileSubtitleInfoList = 2;</code>
   */
  @java.lang.Override
  public com.byteplus.service.vod.model.business.VodFileSubtitleInfo getFileSubtitleInfoList(int index) {
    return fileSubtitleInfoList_.get(index);
  }
  /**
   * <pre>
   *字幕列表
   * </pre>
   *
   * <code>repeated .Byteplus.Vod.Models.Business.VodFileSubtitleInfo FileSubtitleInfoList = 2;</code>
   */
  @java.lang.Override
  public com.byteplus.service.vod.model.business.VodFileSubtitleInfoOrBuilder getFileSubtitleInfoListOrBuilder(
      int index) {
    return fileSubtitleInfoList_.get(index);
  }

  public static final int NOTEXISTFILEIDS_FIELD_NUMBER = 3;
  private com.google.protobuf.LazyStringList notExistFileIds_;
  /**
   * <pre>
   *不存在的转码FileID列表
   * </pre>
   *
   * <code>repeated string NotExistFileIds = 3;</code>
   * @return A list containing the notExistFileIds.
   */
  public com.google.protobuf.ProtocolStringList
      getNotExistFileIdsList() {
    return notExistFileIds_;
  }
  /**
   * <pre>
   *不存在的转码FileID列表
   * </pre>
   *
   * <code>repeated string NotExistFileIds = 3;</code>
   * @return The count of notExistFileIds.
   */
  public int getNotExistFileIdsCount() {
    return notExistFileIds_.size();
  }
  /**
   * <pre>
   *不存在的转码FileID列表
   * </pre>
   *
   * <code>repeated string NotExistFileIds = 3;</code>
   * @param index The index of the element to return.
   * @return The notExistFileIds at the given index.
   */
  public java.lang.String getNotExistFileIds(int index) {
    return notExistFileIds_.get(index);
  }
  /**
   * <pre>
   *不存在的转码FileID列表
   * </pre>
   *
   * <code>repeated string NotExistFileIds = 3;</code>
   * @param index The index of the value to return.
   * @return The bytes of the notExistFileIds at the given index.
   */
  public com.google.protobuf.ByteString
      getNotExistFileIdsBytes(int index) {
    return notExistFileIds_.getByteString(index);
  }

  public static final int TOTALCOUNT_FIELD_NUMBER = 4;
  private int totalCount_;
  /**
   * <pre>
   *符合条件的结果总数
   * </pre>
   *
   * <code>int32 TotalCount = 4;</code>
   * @return The totalCount.
   */
  @java.lang.Override
  public int getTotalCount() {
    return totalCount_;
  }

  public static final int OFFSET_FIELD_NUMBER = 5;
  private int offset_;
  /**
   * <pre>
   *数据偏移量
   * </pre>
   *
   * <code>int32 Offset = 5;</code>
   * @return The offset.
   */
  @java.lang.Override
  public int getOffset() {
    return offset_;
  }

  public static final int PAGESIZE_FIELD_NUMBER = 6;
  private int pageSize_;
  /**
   * <pre>
   *分页大小
   * </pre>
   *
   * <code>int32 PageSize = 6;</code>
   * @return The pageSize.
   */
  @java.lang.Override
  public int getPageSize() {
    return pageSize_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getVidBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, vid_);
    }
    for (int i = 0; i < fileSubtitleInfoList_.size(); i++) {
      output.writeMessage(2, fileSubtitleInfoList_.get(i));
    }
    for (int i = 0; i < notExistFileIds_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, notExistFileIds_.getRaw(i));
    }
    if (totalCount_ != 0) {
      output.writeInt32(4, totalCount_);
    }
    if (offset_ != 0) {
      output.writeInt32(5, offset_);
    }
    if (pageSize_ != 0) {
      output.writeInt32(6, pageSize_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getVidBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, vid_);
    }
    for (int i = 0; i < fileSubtitleInfoList_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, fileSubtitleInfoList_.get(i));
    }
    {
      int dataSize = 0;
      for (int i = 0; i < notExistFileIds_.size(); i++) {
        dataSize += computeStringSizeNoTag(notExistFileIds_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getNotExistFileIdsList().size();
    }
    if (totalCount_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, totalCount_);
    }
    if (offset_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(5, offset_);
    }
    if (pageSize_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(6, pageSize_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.byteplus.service.vod.model.business.VodGetSubtitleInfoListData)) {
      return super.equals(obj);
    }
    com.byteplus.service.vod.model.business.VodGetSubtitleInfoListData other = (com.byteplus.service.vod.model.business.VodGetSubtitleInfoListData) obj;

    if (!getVid()
        .equals(other.getVid())) return false;
    if (!getFileSubtitleInfoListList()
        .equals(other.getFileSubtitleInfoListList())) return false;
    if (!getNotExistFileIdsList()
        .equals(other.getNotExistFileIdsList())) return false;
    if (getTotalCount()
        != other.getTotalCount()) return false;
    if (getOffset()
        != other.getOffset()) return false;
    if (getPageSize()
        != other.getPageSize()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + VID_FIELD_NUMBER;
    hash = (53 * hash) + getVid().hashCode();
    if (getFileSubtitleInfoListCount() > 0) {
      hash = (37 * hash) + FILESUBTITLEINFOLIST_FIELD_NUMBER;
      hash = (53 * hash) + getFileSubtitleInfoListList().hashCode();
    }
    if (getNotExistFileIdsCount() > 0) {
      hash = (37 * hash) + NOTEXISTFILEIDS_FIELD_NUMBER;
      hash = (53 * hash) + getNotExistFileIdsList().hashCode();
    }
    hash = (37 * hash) + TOTALCOUNT_FIELD_NUMBER;
    hash = (53 * hash) + getTotalCount();
    hash = (37 * hash) + OFFSET_FIELD_NUMBER;
    hash = (53 * hash) + getOffset();
    hash = (37 * hash) + PAGESIZE_FIELD_NUMBER;
    hash = (53 * hash) + getPageSize();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.byteplus.service.vod.model.business.VodGetSubtitleInfoListData parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.byteplus.service.vod.model.business.VodGetSubtitleInfoListData parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.byteplus.service.vod.model.business.VodGetSubtitleInfoListData parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.byteplus.service.vod.model.business.VodGetSubtitleInfoListData parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.byteplus.service.vod.model.business.VodGetSubtitleInfoListData parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.byteplus.service.vod.model.business.VodGetSubtitleInfoListData parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.byteplus.service.vod.model.business.VodGetSubtitleInfoListData parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.byteplus.service.vod.model.business.VodGetSubtitleInfoListData parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.byteplus.service.vod.model.business.VodGetSubtitleInfoListData parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.byteplus.service.vod.model.business.VodGetSubtitleInfoListData parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.byteplus.service.vod.model.business.VodGetSubtitleInfoListData parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.byteplus.service.vod.model.business.VodGetSubtitleInfoListData parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.byteplus.service.vod.model.business.VodGetSubtitleInfoListData prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code Byteplus.Vod.Models.Business.VodGetSubtitleInfoListData}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:Byteplus.Vod.Models.Business.VodGetSubtitleInfoListData)
      com.byteplus.service.vod.model.business.VodGetSubtitleInfoListDataOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.byteplus.service.vod.model.business.VodMedia.internal_static_Byteplus_Vod_Models_Business_VodGetSubtitleInfoListData_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.byteplus.service.vod.model.business.VodMedia.internal_static_Byteplus_Vod_Models_Business_VodGetSubtitleInfoListData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.byteplus.service.vod.model.business.VodGetSubtitleInfoListData.class, com.byteplus.service.vod.model.business.VodGetSubtitleInfoListData.Builder.class);
    }

    // Construct using com.byteplus.service.vod.model.business.VodGetSubtitleInfoListData.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getFileSubtitleInfoListFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      vid_ = "";

      if (fileSubtitleInfoListBuilder_ == null) {
        fileSubtitleInfoList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        fileSubtitleInfoListBuilder_.clear();
      }
      notExistFileIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000002);
      totalCount_ = 0;

      offset_ = 0;

      pageSize_ = 0;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.byteplus.service.vod.model.business.VodMedia.internal_static_Byteplus_Vod_Models_Business_VodGetSubtitleInfoListData_descriptor;
    }

    @java.lang.Override
    public com.byteplus.service.vod.model.business.VodGetSubtitleInfoListData getDefaultInstanceForType() {
      return com.byteplus.service.vod.model.business.VodGetSubtitleInfoListData.getDefaultInstance();
    }

    @java.lang.Override
    public com.byteplus.service.vod.model.business.VodGetSubtitleInfoListData build() {
      com.byteplus.service.vod.model.business.VodGetSubtitleInfoListData result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.byteplus.service.vod.model.business.VodGetSubtitleInfoListData buildPartial() {
      com.byteplus.service.vod.model.business.VodGetSubtitleInfoListData result = new com.byteplus.service.vod.model.business.VodGetSubtitleInfoListData(this);
      int from_bitField0_ = bitField0_;
      result.vid_ = vid_;
      if (fileSubtitleInfoListBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          fileSubtitleInfoList_ = java.util.Collections.unmodifiableList(fileSubtitleInfoList_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.fileSubtitleInfoList_ = fileSubtitleInfoList_;
      } else {
        result.fileSubtitleInfoList_ = fileSubtitleInfoListBuilder_.build();
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        notExistFileIds_ = notExistFileIds_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000002);
      }
      result.notExistFileIds_ = notExistFileIds_;
      result.totalCount_ = totalCount_;
      result.offset_ = offset_;
      result.pageSize_ = pageSize_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.byteplus.service.vod.model.business.VodGetSubtitleInfoListData) {
        return mergeFrom((com.byteplus.service.vod.model.business.VodGetSubtitleInfoListData)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.byteplus.service.vod.model.business.VodGetSubtitleInfoListData other) {
      if (other == com.byteplus.service.vod.model.business.VodGetSubtitleInfoListData.getDefaultInstance()) return this;
      if (!other.getVid().isEmpty()) {
        vid_ = other.vid_;
        onChanged();
      }
      if (fileSubtitleInfoListBuilder_ == null) {
        if (!other.fileSubtitleInfoList_.isEmpty()) {
          if (fileSubtitleInfoList_.isEmpty()) {
            fileSubtitleInfoList_ = other.fileSubtitleInfoList_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureFileSubtitleInfoListIsMutable();
            fileSubtitleInfoList_.addAll(other.fileSubtitleInfoList_);
          }
          onChanged();
        }
      } else {
        if (!other.fileSubtitleInfoList_.isEmpty()) {
          if (fileSubtitleInfoListBuilder_.isEmpty()) {
            fileSubtitleInfoListBuilder_.dispose();
            fileSubtitleInfoListBuilder_ = null;
            fileSubtitleInfoList_ = other.fileSubtitleInfoList_;
            bitField0_ = (bitField0_ & ~0x00000001);
            fileSubtitleInfoListBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getFileSubtitleInfoListFieldBuilder() : null;
          } else {
            fileSubtitleInfoListBuilder_.addAllMessages(other.fileSubtitleInfoList_);
          }
        }
      }
      if (!other.notExistFileIds_.isEmpty()) {
        if (notExistFileIds_.isEmpty()) {
          notExistFileIds_ = other.notExistFileIds_;
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          ensureNotExistFileIdsIsMutable();
          notExistFileIds_.addAll(other.notExistFileIds_);
        }
        onChanged();
      }
      if (other.getTotalCount() != 0) {
        setTotalCount(other.getTotalCount());
      }
      if (other.getOffset() != 0) {
        setOffset(other.getOffset());
      }
      if (other.getPageSize() != 0) {
        setPageSize(other.getPageSize());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.byteplus.service.vod.model.business.VodGetSubtitleInfoListData parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.byteplus.service.vod.model.business.VodGetSubtitleInfoListData) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object vid_ = "";
    /**
     * <pre>
     *视频ID
     * </pre>
     *
     * <code>string Vid = 1;</code>
     * @return The vid.
     */
    public java.lang.String getVid() {
      java.lang.Object ref = vid_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        vid_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     *视频ID
     * </pre>
     *
     * <code>string Vid = 1;</code>
     * @return The bytes for vid.
     */
    public com.google.protobuf.ByteString
        getVidBytes() {
      java.lang.Object ref = vid_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        vid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     *视频ID
     * </pre>
     *
     * <code>string Vid = 1;</code>
     * @param value The vid to set.
     * @return This builder for chaining.
     */
    public Builder setVid(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      vid_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *视频ID
     * </pre>
     *
     * <code>string Vid = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearVid() {
      
      vid_ = getDefaultInstance().getVid();
      onChanged();
      return this;
    }
    /**
     * <pre>
     *视频ID
     * </pre>
     *
     * <code>string Vid = 1;</code>
     * @param value The bytes for vid to set.
     * @return This builder for chaining.
     */
    public Builder setVidBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      vid_ = value;
      onChanged();
      return this;
    }

    private java.util.List<com.byteplus.service.vod.model.business.VodFileSubtitleInfo> fileSubtitleInfoList_ =
      java.util.Collections.emptyList();
    private void ensureFileSubtitleInfoListIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        fileSubtitleInfoList_ = new java.util.ArrayList<com.byteplus.service.vod.model.business.VodFileSubtitleInfo>(fileSubtitleInfoList_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.byteplus.service.vod.model.business.VodFileSubtitleInfo, com.byteplus.service.vod.model.business.VodFileSubtitleInfo.Builder, com.byteplus.service.vod.model.business.VodFileSubtitleInfoOrBuilder> fileSubtitleInfoListBuilder_;

    /**
     * <pre>
     *字幕列表
     * </pre>
     *
     * <code>repeated .Byteplus.Vod.Models.Business.VodFileSubtitleInfo FileSubtitleInfoList = 2;</code>
     */
    public java.util.List<com.byteplus.service.vod.model.business.VodFileSubtitleInfo> getFileSubtitleInfoListList() {
      if (fileSubtitleInfoListBuilder_ == null) {
        return java.util.Collections.unmodifiableList(fileSubtitleInfoList_);
      } else {
        return fileSubtitleInfoListBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     *字幕列表
     * </pre>
     *
     * <code>repeated .Byteplus.Vod.Models.Business.VodFileSubtitleInfo FileSubtitleInfoList = 2;</code>
     */
    public int getFileSubtitleInfoListCount() {
      if (fileSubtitleInfoListBuilder_ == null) {
        return fileSubtitleInfoList_.size();
      } else {
        return fileSubtitleInfoListBuilder_.getCount();
      }
    }
    /**
     * <pre>
     *字幕列表
     * </pre>
     *
     * <code>repeated .Byteplus.Vod.Models.Business.VodFileSubtitleInfo FileSubtitleInfoList = 2;</code>
     */
    public com.byteplus.service.vod.model.business.VodFileSubtitleInfo getFileSubtitleInfoList(int index) {
      if (fileSubtitleInfoListBuilder_ == null) {
        return fileSubtitleInfoList_.get(index);
      } else {
        return fileSubtitleInfoListBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     *字幕列表
     * </pre>
     *
     * <code>repeated .Byteplus.Vod.Models.Business.VodFileSubtitleInfo FileSubtitleInfoList = 2;</code>
     */
    public Builder setFileSubtitleInfoList(
        int index, com.byteplus.service.vod.model.business.VodFileSubtitleInfo value) {
      if (fileSubtitleInfoListBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFileSubtitleInfoListIsMutable();
        fileSubtitleInfoList_.set(index, value);
        onChanged();
      } else {
        fileSubtitleInfoListBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *字幕列表
     * </pre>
     *
     * <code>repeated .Byteplus.Vod.Models.Business.VodFileSubtitleInfo FileSubtitleInfoList = 2;</code>
     */
    public Builder setFileSubtitleInfoList(
        int index, com.byteplus.service.vod.model.business.VodFileSubtitleInfo.Builder builderForValue) {
      if (fileSubtitleInfoListBuilder_ == null) {
        ensureFileSubtitleInfoListIsMutable();
        fileSubtitleInfoList_.set(index, builderForValue.build());
        onChanged();
      } else {
        fileSubtitleInfoListBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *字幕列表
     * </pre>
     *
     * <code>repeated .Byteplus.Vod.Models.Business.VodFileSubtitleInfo FileSubtitleInfoList = 2;</code>
     */
    public Builder addFileSubtitleInfoList(com.byteplus.service.vod.model.business.VodFileSubtitleInfo value) {
      if (fileSubtitleInfoListBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFileSubtitleInfoListIsMutable();
        fileSubtitleInfoList_.add(value);
        onChanged();
      } else {
        fileSubtitleInfoListBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     *字幕列表
     * </pre>
     *
     * <code>repeated .Byteplus.Vod.Models.Business.VodFileSubtitleInfo FileSubtitleInfoList = 2;</code>
     */
    public Builder addFileSubtitleInfoList(
        int index, com.byteplus.service.vod.model.business.VodFileSubtitleInfo value) {
      if (fileSubtitleInfoListBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFileSubtitleInfoListIsMutable();
        fileSubtitleInfoList_.add(index, value);
        onChanged();
      } else {
        fileSubtitleInfoListBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *字幕列表
     * </pre>
     *
     * <code>repeated .Byteplus.Vod.Models.Business.VodFileSubtitleInfo FileSubtitleInfoList = 2;</code>
     */
    public Builder addFileSubtitleInfoList(
        com.byteplus.service.vod.model.business.VodFileSubtitleInfo.Builder builderForValue) {
      if (fileSubtitleInfoListBuilder_ == null) {
        ensureFileSubtitleInfoListIsMutable();
        fileSubtitleInfoList_.add(builderForValue.build());
        onChanged();
      } else {
        fileSubtitleInfoListBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *字幕列表
     * </pre>
     *
     * <code>repeated .Byteplus.Vod.Models.Business.VodFileSubtitleInfo FileSubtitleInfoList = 2;</code>
     */
    public Builder addFileSubtitleInfoList(
        int index, com.byteplus.service.vod.model.business.VodFileSubtitleInfo.Builder builderForValue) {
      if (fileSubtitleInfoListBuilder_ == null) {
        ensureFileSubtitleInfoListIsMutable();
        fileSubtitleInfoList_.add(index, builderForValue.build());
        onChanged();
      } else {
        fileSubtitleInfoListBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *字幕列表
     * </pre>
     *
     * <code>repeated .Byteplus.Vod.Models.Business.VodFileSubtitleInfo FileSubtitleInfoList = 2;</code>
     */
    public Builder addAllFileSubtitleInfoList(
        java.lang.Iterable<? extends com.byteplus.service.vod.model.business.VodFileSubtitleInfo> values) {
      if (fileSubtitleInfoListBuilder_ == null) {
        ensureFileSubtitleInfoListIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, fileSubtitleInfoList_);
        onChanged();
      } else {
        fileSubtitleInfoListBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     *字幕列表
     * </pre>
     *
     * <code>repeated .Byteplus.Vod.Models.Business.VodFileSubtitleInfo FileSubtitleInfoList = 2;</code>
     */
    public Builder clearFileSubtitleInfoList() {
      if (fileSubtitleInfoListBuilder_ == null) {
        fileSubtitleInfoList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        fileSubtitleInfoListBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     *字幕列表
     * </pre>
     *
     * <code>repeated .Byteplus.Vod.Models.Business.VodFileSubtitleInfo FileSubtitleInfoList = 2;</code>
     */
    public Builder removeFileSubtitleInfoList(int index) {
      if (fileSubtitleInfoListBuilder_ == null) {
        ensureFileSubtitleInfoListIsMutable();
        fileSubtitleInfoList_.remove(index);
        onChanged();
      } else {
        fileSubtitleInfoListBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     *字幕列表
     * </pre>
     *
     * <code>repeated .Byteplus.Vod.Models.Business.VodFileSubtitleInfo FileSubtitleInfoList = 2;</code>
     */
    public com.byteplus.service.vod.model.business.VodFileSubtitleInfo.Builder getFileSubtitleInfoListBuilder(
        int index) {
      return getFileSubtitleInfoListFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     *字幕列表
     * </pre>
     *
     * <code>repeated .Byteplus.Vod.Models.Business.VodFileSubtitleInfo FileSubtitleInfoList = 2;</code>
     */
    public com.byteplus.service.vod.model.business.VodFileSubtitleInfoOrBuilder getFileSubtitleInfoListOrBuilder(
        int index) {
      if (fileSubtitleInfoListBuilder_ == null) {
        return fileSubtitleInfoList_.get(index);  } else {
        return fileSubtitleInfoListBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     *字幕列表
     * </pre>
     *
     * <code>repeated .Byteplus.Vod.Models.Business.VodFileSubtitleInfo FileSubtitleInfoList = 2;</code>
     */
    public java.util.List<? extends com.byteplus.service.vod.model.business.VodFileSubtitleInfoOrBuilder> 
         getFileSubtitleInfoListOrBuilderList() {
      if (fileSubtitleInfoListBuilder_ != null) {
        return fileSubtitleInfoListBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(fileSubtitleInfoList_);
      }
    }
    /**
     * <pre>
     *字幕列表
     * </pre>
     *
     * <code>repeated .Byteplus.Vod.Models.Business.VodFileSubtitleInfo FileSubtitleInfoList = 2;</code>
     */
    public com.byteplus.service.vod.model.business.VodFileSubtitleInfo.Builder addFileSubtitleInfoListBuilder() {
      return getFileSubtitleInfoListFieldBuilder().addBuilder(
          com.byteplus.service.vod.model.business.VodFileSubtitleInfo.getDefaultInstance());
    }
    /**
     * <pre>
     *字幕列表
     * </pre>
     *
     * <code>repeated .Byteplus.Vod.Models.Business.VodFileSubtitleInfo FileSubtitleInfoList = 2;</code>
     */
    public com.byteplus.service.vod.model.business.VodFileSubtitleInfo.Builder addFileSubtitleInfoListBuilder(
        int index) {
      return getFileSubtitleInfoListFieldBuilder().addBuilder(
          index, com.byteplus.service.vod.model.business.VodFileSubtitleInfo.getDefaultInstance());
    }
    /**
     * <pre>
     *字幕列表
     * </pre>
     *
     * <code>repeated .Byteplus.Vod.Models.Business.VodFileSubtitleInfo FileSubtitleInfoList = 2;</code>
     */
    public java.util.List<com.byteplus.service.vod.model.business.VodFileSubtitleInfo.Builder> 
         getFileSubtitleInfoListBuilderList() {
      return getFileSubtitleInfoListFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.byteplus.service.vod.model.business.VodFileSubtitleInfo, com.byteplus.service.vod.model.business.VodFileSubtitleInfo.Builder, com.byteplus.service.vod.model.business.VodFileSubtitleInfoOrBuilder> 
        getFileSubtitleInfoListFieldBuilder() {
      if (fileSubtitleInfoListBuilder_ == null) {
        fileSubtitleInfoListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.byteplus.service.vod.model.business.VodFileSubtitleInfo, com.byteplus.service.vod.model.business.VodFileSubtitleInfo.Builder, com.byteplus.service.vod.model.business.VodFileSubtitleInfoOrBuilder>(
                fileSubtitleInfoList_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        fileSubtitleInfoList_ = null;
      }
      return fileSubtitleInfoListBuilder_;
    }

    private com.google.protobuf.LazyStringList notExistFileIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureNotExistFileIdsIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        notExistFileIds_ = new com.google.protobuf.LazyStringArrayList(notExistFileIds_);
        bitField0_ |= 0x00000002;
       }
    }
    /**
     * <pre>
     *不存在的转码FileID列表
     * </pre>
     *
     * <code>repeated string NotExistFileIds = 3;</code>
     * @return A list containing the notExistFileIds.
     */
    public com.google.protobuf.ProtocolStringList
        getNotExistFileIdsList() {
      return notExistFileIds_.getUnmodifiableView();
    }
    /**
     * <pre>
     *不存在的转码FileID列表
     * </pre>
     *
     * <code>repeated string NotExistFileIds = 3;</code>
     * @return The count of notExistFileIds.
     */
    public int getNotExistFileIdsCount() {
      return notExistFileIds_.size();
    }
    /**
     * <pre>
     *不存在的转码FileID列表
     * </pre>
     *
     * <code>repeated string NotExistFileIds = 3;</code>
     * @param index The index of the element to return.
     * @return The notExistFileIds at the given index.
     */
    public java.lang.String getNotExistFileIds(int index) {
      return notExistFileIds_.get(index);
    }
    /**
     * <pre>
     *不存在的转码FileID列表
     * </pre>
     *
     * <code>repeated string NotExistFileIds = 3;</code>
     * @param index The index of the value to return.
     * @return The bytes of the notExistFileIds at the given index.
     */
    public com.google.protobuf.ByteString
        getNotExistFileIdsBytes(int index) {
      return notExistFileIds_.getByteString(index);
    }
    /**
     * <pre>
     *不存在的转码FileID列表
     * </pre>
     *
     * <code>repeated string NotExistFileIds = 3;</code>
     * @param index The index to set the value at.
     * @param value The notExistFileIds to set.
     * @return This builder for chaining.
     */
    public Builder setNotExistFileIds(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureNotExistFileIdsIsMutable();
      notExistFileIds_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *不存在的转码FileID列表
     * </pre>
     *
     * <code>repeated string NotExistFileIds = 3;</code>
     * @param value The notExistFileIds to add.
     * @return This builder for chaining.
     */
    public Builder addNotExistFileIds(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureNotExistFileIdsIsMutable();
      notExistFileIds_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *不存在的转码FileID列表
     * </pre>
     *
     * <code>repeated string NotExistFileIds = 3;</code>
     * @param values The notExistFileIds to add.
     * @return This builder for chaining.
     */
    public Builder addAllNotExistFileIds(
        java.lang.Iterable<java.lang.String> values) {
      ensureNotExistFileIdsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, notExistFileIds_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *不存在的转码FileID列表
     * </pre>
     *
     * <code>repeated string NotExistFileIds = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearNotExistFileIds() {
      notExistFileIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <pre>
     *不存在的转码FileID列表
     * </pre>
     *
     * <code>repeated string NotExistFileIds = 3;</code>
     * @param value The bytes of the notExistFileIds to add.
     * @return This builder for chaining.
     */
    public Builder addNotExistFileIdsBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureNotExistFileIdsIsMutable();
      notExistFileIds_.add(value);
      onChanged();
      return this;
    }

    private int totalCount_ ;
    /**
     * <pre>
     *符合条件的结果总数
     * </pre>
     *
     * <code>int32 TotalCount = 4;</code>
     * @return The totalCount.
     */
    @java.lang.Override
    public int getTotalCount() {
      return totalCount_;
    }
    /**
     * <pre>
     *符合条件的结果总数
     * </pre>
     *
     * <code>int32 TotalCount = 4;</code>
     * @param value The totalCount to set.
     * @return This builder for chaining.
     */
    public Builder setTotalCount(int value) {
      
      totalCount_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *符合条件的结果总数
     * </pre>
     *
     * <code>int32 TotalCount = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearTotalCount() {
      
      totalCount_ = 0;
      onChanged();
      return this;
    }

    private int offset_ ;
    /**
     * <pre>
     *数据偏移量
     * </pre>
     *
     * <code>int32 Offset = 5;</code>
     * @return The offset.
     */
    @java.lang.Override
    public int getOffset() {
      return offset_;
    }
    /**
     * <pre>
     *数据偏移量
     * </pre>
     *
     * <code>int32 Offset = 5;</code>
     * @param value The offset to set.
     * @return This builder for chaining.
     */
    public Builder setOffset(int value) {
      
      offset_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *数据偏移量
     * </pre>
     *
     * <code>int32 Offset = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearOffset() {
      
      offset_ = 0;
      onChanged();
      return this;
    }

    private int pageSize_ ;
    /**
     * <pre>
     *分页大小
     * </pre>
     *
     * <code>int32 PageSize = 6;</code>
     * @return The pageSize.
     */
    @java.lang.Override
    public int getPageSize() {
      return pageSize_;
    }
    /**
     * <pre>
     *分页大小
     * </pre>
     *
     * <code>int32 PageSize = 6;</code>
     * @param value The pageSize to set.
     * @return This builder for chaining.
     */
    public Builder setPageSize(int value) {
      
      pageSize_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *分页大小
     * </pre>
     *
     * <code>int32 PageSize = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearPageSize() {
      
      pageSize_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:Byteplus.Vod.Models.Business.VodGetSubtitleInfoListData)
  }

  // @@protoc_insertion_point(class_scope:Byteplus.Vod.Models.Business.VodGetSubtitleInfoListData)
  private static final com.byteplus.service.vod.model.business.VodGetSubtitleInfoListData DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.byteplus.service.vod.model.business.VodGetSubtitleInfoListData();
  }

  public static com.byteplus.service.vod.model.business.VodGetSubtitleInfoListData getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<VodGetSubtitleInfoListData>
      PARSER = new com.google.protobuf.AbstractParser<VodGetSubtitleInfoListData>() {
    @java.lang.Override
    public VodGetSubtitleInfoListData parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new VodGetSubtitleInfoListData(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<VodGetSubtitleInfoListData> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<VodGetSubtitleInfoListData> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.byteplus.service.vod.model.business.VodGetSubtitleInfoListData getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

