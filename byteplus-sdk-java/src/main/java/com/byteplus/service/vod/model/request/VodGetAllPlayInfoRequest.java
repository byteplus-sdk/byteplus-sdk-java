// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: byteplus/vod/request/request_vod.proto

package com.byteplus.service.vod.model.request;

/**
 * <pre>
 * **********************************************************************
 * 播放
 * **********************************************************************
 * </pre>
 *
 * Protobuf type {@code Byteplus.Vod.Models.Request.VodGetAllPlayInfoRequest}
 */
public final class VodGetAllPlayInfoRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:Byteplus.Vod.Models.Request.VodGetAllPlayInfoRequest)
    VodGetAllPlayInfoRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use VodGetAllPlayInfoRequest.newBuilder() to construct.
  private VodGetAllPlayInfoRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private VodGetAllPlayInfoRequest() {
    vids_ = "";
    formats_ = "";
    codecs_ = "";
    definitions_ = "";
    fileTypes_ = "";
    logoTypes_ = "";
    needEncryptStream_ = "";
    ssl_ = "";
    needThumbs_ = "";
    needBarrageMask_ = "";
    cdnType_ = "";
    unionInfo_ = "";
    playScene_ = "";
    drmExpireTimestamp_ = "";
    hDRType_ = "";
    keyFrameAlignmentVersion_ = "";
    userAction_ = "";
    quality_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new VodGetAllPlayInfoRequest();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private VodGetAllPlayInfoRequest(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            vids_ = s;
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            formats_ = s;
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            codecs_ = s;
            break;
          }
          case 34: {
            java.lang.String s = input.readStringRequireUtf8();

            definitions_ = s;
            break;
          }
          case 42: {
            java.lang.String s = input.readStringRequireUtf8();

            fileTypes_ = s;
            break;
          }
          case 50: {
            java.lang.String s = input.readStringRequireUtf8();

            logoTypes_ = s;
            break;
          }
          case 58: {
            java.lang.String s = input.readStringRequireUtf8();

            needEncryptStream_ = s;
            break;
          }
          case 66: {
            java.lang.String s = input.readStringRequireUtf8();

            ssl_ = s;
            break;
          }
          case 74: {
            java.lang.String s = input.readStringRequireUtf8();

            needThumbs_ = s;
            break;
          }
          case 82: {
            java.lang.String s = input.readStringRequireUtf8();

            needBarrageMask_ = s;
            break;
          }
          case 90: {
            java.lang.String s = input.readStringRequireUtf8();

            cdnType_ = s;
            break;
          }
          case 98: {
            java.lang.String s = input.readStringRequireUtf8();

            unionInfo_ = s;
            break;
          }
          case 106: {
            java.lang.String s = input.readStringRequireUtf8();

            playScene_ = s;
            break;
          }
          case 114: {
            java.lang.String s = input.readStringRequireUtf8();

            drmExpireTimestamp_ = s;
            break;
          }
          case 122: {
            java.lang.String s = input.readStringRequireUtf8();

            hDRType_ = s;
            break;
          }
          case 130: {
            java.lang.String s = input.readStringRequireUtf8();

            keyFrameAlignmentVersion_ = s;
            break;
          }
          case 138: {
            java.lang.String s = input.readStringRequireUtf8();

            userAction_ = s;
            break;
          }
          case 146: {
            java.lang.String s = input.readStringRequireUtf8();

            quality_ = s;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.byteplus.service.vod.model.request.VodRequest.internal_static_Byteplus_Vod_Models_Request_VodGetAllPlayInfoRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.byteplus.service.vod.model.request.VodRequest.internal_static_Byteplus_Vod_Models_Request_VodGetAllPlayInfoRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.byteplus.service.vod.model.request.VodGetAllPlayInfoRequest.class, com.byteplus.service.vod.model.request.VodGetAllPlayInfoRequest.Builder.class);
  }

  public static final int VIDS_FIELD_NUMBER = 1;
  private volatile java.lang.Object vids_;
  /**
   * <pre>
   * 视频ID 
   * </pre>
   *
   * <code>string Vids = 1;</code>
   * @return The vids.
   */
  @java.lang.Override
  public java.lang.String getVids() {
    java.lang.Object ref = vids_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      vids_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 视频ID 
   * </pre>
   *
   * <code>string Vids = 1;</code>
   * @return The bytes for vids.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getVidsBytes() {
    java.lang.Object ref = vids_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      vids_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int FORMATS_FIELD_NUMBER = 2;
  private volatile java.lang.Object formats_;
  /**
   * <pre>
   * 封装格式，支持 mp4、dash、hls、mp3、m4a、ogg。多个Format
   * 组成的字符串，中间用","隔开。默认获取全部
   * </pre>
   *
   * <code>string Formats = 2;</code>
   * @return The formats.
   */
  @java.lang.Override
  public java.lang.String getFormats() {
    java.lang.Object ref = formats_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      formats_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 封装格式，支持 mp4、dash、hls、mp3、m4a、ogg。多个Format
   * 组成的字符串，中间用","隔开。默认获取全部
   * </pre>
   *
   * <code>string Formats = 2;</code>
   * @return The bytes for formats.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getFormatsBytes() {
    java.lang.Object ref = formats_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      formats_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CODECS_FIELD_NUMBER = 3;
  private volatile java.lang.Object codecs_;
  /**
   * <pre>
   * 编码格式，支持 mp3、aac、opus、H264、H265、H266。多个Codec
   * 组成的字符串，中间用","隔开。默认获取全部
   * </pre>
   *
   * <code>string Codecs = 3;</code>
   * @return The codecs.
   */
  @java.lang.Override
  public java.lang.String getCodecs() {
    java.lang.Object ref = codecs_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      codecs_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 编码格式，支持 mp3、aac、opus、H264、H265、H266。多个Codec
   * 组成的字符串，中间用","隔开。默认获取全部
   * </pre>
   *
   * <code>string Codecs = 3;</code>
   * @return The bytes for codecs.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getCodecsBytes() {
    java.lang.Object ref = codecs_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      codecs_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DEFINITIONS_FIELD_NUMBER = 4;
  private volatile java.lang.Object definitions_;
  /**
   * <pre>
   * 视频流清晰度，默认返回全部，支持：240p，360p，480p，540p，720p，1080p。多个
   * Codec 组成的字符串，中间用","隔开。默认获取全部
   * </pre>
   *
   * <code>string Definitions = 4;</code>
   * @return The definitions.
   */
  @java.lang.Override
  public java.lang.String getDefinitions() {
    java.lang.Object ref = definitions_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      definitions_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 视频流清晰度，默认返回全部，支持：240p，360p，480p，540p，720p，1080p。多个
   * Codec 组成的字符串，中间用","隔开。默认获取全部
   * </pre>
   *
   * <code>string Definitions = 4;</code>
   * @return The bytes for definitions.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getDefinitionsBytes() {
    java.lang.Object ref = definitions_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      definitions_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int FILETYPES_FIELD_NUMBER = 5;
  private volatile java.lang.Object fileTypes_;
  /**
   * <pre>
   * 流文件类型。支持：video-视频流, audio-音频流。
   * 多个 FileType 组成的字符串，中间用","隔开。默认获取全部类型
   * </pre>
   *
   * <code>string FileTypes = 5;</code>
   * @return The fileTypes.
   */
  @java.lang.Override
  public java.lang.String getFileTypes() {
    java.lang.Object ref = fileTypes_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      fileTypes_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 流文件类型。支持：video-视频流, audio-音频流。
   * 多个 FileType 组成的字符串，中间用","隔开。默认获取全部类型
   * </pre>
   *
   * <code>string FileTypes = 5;</code>
   * @return The bytes for fileTypes.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getFileTypesBytes() {
    java.lang.Object ref = fileTypes_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      fileTypes_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int LOGOTYPES_FIELD_NUMBER = 6;
  private volatile java.lang.Object logoTypes_;
  /**
   * <pre>
   * 水印贴片标签 
   * </pre>
   *
   * <code>string LogoTypes = 6;</code>
   * @return The logoTypes.
   */
  @java.lang.Override
  public java.lang.String getLogoTypes() {
    java.lang.Object ref = logoTypes_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      logoTypes_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 水印贴片标签 
   * </pre>
   *
   * <code>string LogoTypes = 6;</code>
   * @return The bytes for logoTypes.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getLogoTypesBytes() {
    java.lang.Object ref = logoTypes_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      logoTypes_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int NEEDENCRYPTSTREAM_FIELD_NUMBER = 7;
  private volatile java.lang.Object needEncryptStream_;
  /**
   * <pre>
   * 是否加密, 支持: "encrypt"-加密流, "normal"-非加密流, 默认返回全部 
   * </pre>
   *
   * <code>string NeedEncryptStream = 7;</code>
   * @return The needEncryptStream.
   */
  @java.lang.Override
  public java.lang.String getNeedEncryptStream() {
    java.lang.Object ref = needEncryptStream_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      needEncryptStream_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 是否加密, 支持: "encrypt"-加密流, "normal"-非加密流, 默认返回全部 
   * </pre>
   *
   * <code>string NeedEncryptStream = 7;</code>
   * @return The bytes for needEncryptStream.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNeedEncryptStreamBytes() {
    java.lang.Object ref = needEncryptStream_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      needEncryptStream_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SSL_FIELD_NUMBER = 8;
  private volatile java.lang.Object ssl_;
  /**
   * <pre>
   * 返回https播放地址，默认否, 1-是；0-否 
   * </pre>
   *
   * <code>string Ssl = 8;</code>
   * @return The ssl.
   */
  @java.lang.Override
  public java.lang.String getSsl() {
    java.lang.Object ref = ssl_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      ssl_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 返回https播放地址，默认否, 1-是；0-否 
   * </pre>
   *
   * <code>string Ssl = 8;</code>
   * @return The bytes for ssl.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getSslBytes() {
    java.lang.Object ref = ssl_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      ssl_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int NEEDTHUMBS_FIELD_NUMBER = 9;
  private volatile java.lang.Object needThumbs_;
  /**
   * <pre>
   * 是否需要雪碧图（缩略图），默认否，1-是；0-否 
   * </pre>
   *
   * <code>string NeedThumbs = 9;</code>
   * @return The needThumbs.
   */
  @java.lang.Override
  public java.lang.String getNeedThumbs() {
    java.lang.Object ref = needThumbs_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      needThumbs_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 是否需要雪碧图（缩略图），默认否，1-是；0-否 
   * </pre>
   *
   * <code>string NeedThumbs = 9;</code>
   * @return The bytes for needThumbs.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNeedThumbsBytes() {
    java.lang.Object ref = needThumbs_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      needThumbs_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int NEEDBARRAGEMASK_FIELD_NUMBER = 10;
  private volatile java.lang.Object needBarrageMask_;
  /**
   * <pre>
   * 是否需要蒙版弹幕，默认否，1-是；0-否 
   * </pre>
   *
   * <code>string NeedBarrageMask = 10;</code>
   * @return The needBarrageMask.
   */
  @java.lang.Override
  public java.lang.String getNeedBarrageMask() {
    java.lang.Object ref = needBarrageMask_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      needBarrageMask_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 是否需要蒙版弹幕，默认否，1-是；0-否 
   * </pre>
   *
   * <code>string NeedBarrageMask = 10;</code>
   * @return The bytes for needBarrageMask.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNeedBarrageMaskBytes() {
    java.lang.Object ref = needBarrageMask_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      needBarrageMask_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CDNTYPE_FIELD_NUMBER = 11;
  private volatile java.lang.Object cdnType_;
  /**
   * <pre>
   * 指定CDN类型, 默认不传为普通CDN, 若需使用请联系技术支持 
   * </pre>
   *
   * <code>string CdnType = 11;</code>
   * @return The cdnType.
   */
  @java.lang.Override
  public java.lang.String getCdnType() {
    java.lang.Object ref = cdnType_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      cdnType_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 指定CDN类型, 默认不传为普通CDN, 若需使用请联系技术支持 
   * </pre>
   *
   * <code>string CdnType = 11;</code>
   * @return The bytes for cdnType.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getCdnTypeBytes() {
    java.lang.Object ref = cdnType_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      cdnType_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int UNIONINFO_FIELD_NUMBER = 12;
  private volatile java.lang.Object unionInfo_;
  /**
   * <pre>
   * 唯一性标识信息, 若需使用请联系技术支持 
   * </pre>
   *
   * <code>string UnionInfo = 12;</code>
   * @return The unionInfo.
   */
  @java.lang.Override
  public java.lang.String getUnionInfo() {
    java.lang.Object ref = unionInfo_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      unionInfo_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 唯一性标识信息, 若需使用请联系技术支持 
   * </pre>
   *
   * <code>string UnionInfo = 12;</code>
   * @return The bytes for unionInfo.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getUnionInfoBytes() {
    java.lang.Object ref = unionInfo_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      unionInfo_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PLAYSCENE_FIELD_NUMBER = 13;
  private volatile java.lang.Object playScene_;
  /**
   * <pre>
   * 播放场景，指定获取对应场景的音视频流。当前支持：preview-试看 
   * </pre>
   *
   * <code>string PlayScene = 13;</code>
   * @return The playScene.
   */
  @java.lang.Override
  public java.lang.String getPlayScene() {
    java.lang.Object ref = playScene_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      playScene_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 播放场景，指定获取对应场景的音视频流。当前支持：preview-试看 
   * </pre>
   *
   * <code>string PlayScene = 13;</code>
   * @return The bytes for playScene.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getPlaySceneBytes() {
    java.lang.Object ref = playScene_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      playScene_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DRMEXPIRETIMESTAMP_FIELD_NUMBER = 14;
  private volatile java.lang.Object drmExpireTimestamp_;
  /**
   * <pre>
   * DRM过期时间戳, 若需使用请联系技术支持 
   * </pre>
   *
   * <code>string DrmExpireTimestamp = 14;</code>
   * @return The drmExpireTimestamp.
   */
  @java.lang.Override
  public java.lang.String getDrmExpireTimestamp() {
    java.lang.Object ref = drmExpireTimestamp_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      drmExpireTimestamp_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * DRM过期时间戳, 若需使用请联系技术支持 
   * </pre>
   *
   * <code>string DrmExpireTimestamp = 14;</code>
   * @return The bytes for drmExpireTimestamp.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getDrmExpireTimestampBytes() {
    java.lang.Object ref = drmExpireTimestamp_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      drmExpireTimestamp_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int HDRTYPE_FIELD_NUMBER = 15;
  private volatile java.lang.Object hDRType_;
  /**
   * <pre>
   * 默认获取全部。支持: "SDR", "PQHDR", "SLGHDR", 默认返回全部 
   * </pre>
   *
   * <code>string HDRType = 15;</code>
   * @return The hDRType.
   */
  @java.lang.Override
  public java.lang.String getHDRType() {
    java.lang.Object ref = hDRType_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      hDRType_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 默认获取全部。支持: "SDR", "PQHDR", "SLGHDR", 默认返回全部 
   * </pre>
   *
   * <code>string HDRType = 15;</code>
   * @return The bytes for hDRType.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getHDRTypeBytes() {
    java.lang.Object ref = hDRType_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      hDRType_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int KEYFRAMEALIGNMENTVERSION_FIELD_NUMBER = 16;
  private volatile java.lang.Object keyFrameAlignmentVersion_;
  /**
   * <pre>
   * 使用的帧对齐转码版本。支持: "1"-返回版本一, 默认不指定版本，全部返回 
   * </pre>
   *
   * <code>string KeyFrameAlignmentVersion = 16;</code>
   * @return The keyFrameAlignmentVersion.
   */
  @java.lang.Override
  public java.lang.String getKeyFrameAlignmentVersion() {
    java.lang.Object ref = keyFrameAlignmentVersion_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      keyFrameAlignmentVersion_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 使用的帧对齐转码版本。支持: "1"-返回版本一, 默认不指定版本，全部返回 
   * </pre>
   *
   * <code>string KeyFrameAlignmentVersion = 16;</code>
   * @return The bytes for keyFrameAlignmentVersion.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getKeyFrameAlignmentVersionBytes() {
    java.lang.Object ref = keyFrameAlignmentVersion_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      keyFrameAlignmentVersion_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int USERACTION_FIELD_NUMBER = 17;
  private volatile java.lang.Object userAction_;
  /**
   * <pre>
   * 发布状态, 支持: "Available"-发布, "NoAction"-未发布, 默认返回全部 
   * </pre>
   *
   * <code>string UserAction = 17;</code>
   * @return The userAction.
   */
  @java.lang.Override
  public java.lang.String getUserAction() {
    java.lang.Object ref = userAction_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      userAction_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 发布状态, 支持: "Available"-发布, "NoAction"-未发布, 默认返回全部 
   * </pre>
   *
   * <code>string UserAction = 17;</code>
   * @return The bytes for userAction.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getUserActionBytes() {
    java.lang.Object ref = userAction_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      userAction_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int QUALITY_FIELD_NUMBER = 18;
  private volatile java.lang.Object quality_;
  /**
   * <pre>
   * 音频音质。当 FileType 为
   * audio时起作用，表示音频音质参数。支持：medium、higher、highest.默认返回所有音频流
   * </pre>
   *
   * <code>string Quality = 18;</code>
   * @return The quality.
   */
  @java.lang.Override
  public java.lang.String getQuality() {
    java.lang.Object ref = quality_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      quality_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 音频音质。当 FileType 为
   * audio时起作用，表示音频音质参数。支持：medium、higher、highest.默认返回所有音频流
   * </pre>
   *
   * <code>string Quality = 18;</code>
   * @return The bytes for quality.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getQualityBytes() {
    java.lang.Object ref = quality_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      quality_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(vids_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, vids_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(formats_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, formats_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(codecs_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, codecs_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(definitions_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, definitions_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(fileTypes_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, fileTypes_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(logoTypes_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, logoTypes_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(needEncryptStream_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 7, needEncryptStream_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(ssl_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 8, ssl_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(needThumbs_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 9, needThumbs_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(needBarrageMask_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 10, needBarrageMask_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(cdnType_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 11, cdnType_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(unionInfo_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 12, unionInfo_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(playScene_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 13, playScene_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(drmExpireTimestamp_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 14, drmExpireTimestamp_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(hDRType_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 15, hDRType_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(keyFrameAlignmentVersion_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 16, keyFrameAlignmentVersion_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(userAction_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 17, userAction_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(quality_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 18, quality_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(vids_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, vids_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(formats_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, formats_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(codecs_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, codecs_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(definitions_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, definitions_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(fileTypes_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, fileTypes_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(logoTypes_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, logoTypes_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(needEncryptStream_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, needEncryptStream_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(ssl_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, ssl_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(needThumbs_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, needThumbs_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(needBarrageMask_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, needBarrageMask_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(cdnType_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, cdnType_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(unionInfo_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(12, unionInfo_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(playScene_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(13, playScene_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(drmExpireTimestamp_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(14, drmExpireTimestamp_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(hDRType_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(15, hDRType_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(keyFrameAlignmentVersion_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(16, keyFrameAlignmentVersion_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(userAction_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(17, userAction_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(quality_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(18, quality_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.byteplus.service.vod.model.request.VodGetAllPlayInfoRequest)) {
      return super.equals(obj);
    }
    com.byteplus.service.vod.model.request.VodGetAllPlayInfoRequest other = (com.byteplus.service.vod.model.request.VodGetAllPlayInfoRequest) obj;

    if (!getVids()
        .equals(other.getVids())) return false;
    if (!getFormats()
        .equals(other.getFormats())) return false;
    if (!getCodecs()
        .equals(other.getCodecs())) return false;
    if (!getDefinitions()
        .equals(other.getDefinitions())) return false;
    if (!getFileTypes()
        .equals(other.getFileTypes())) return false;
    if (!getLogoTypes()
        .equals(other.getLogoTypes())) return false;
    if (!getNeedEncryptStream()
        .equals(other.getNeedEncryptStream())) return false;
    if (!getSsl()
        .equals(other.getSsl())) return false;
    if (!getNeedThumbs()
        .equals(other.getNeedThumbs())) return false;
    if (!getNeedBarrageMask()
        .equals(other.getNeedBarrageMask())) return false;
    if (!getCdnType()
        .equals(other.getCdnType())) return false;
    if (!getUnionInfo()
        .equals(other.getUnionInfo())) return false;
    if (!getPlayScene()
        .equals(other.getPlayScene())) return false;
    if (!getDrmExpireTimestamp()
        .equals(other.getDrmExpireTimestamp())) return false;
    if (!getHDRType()
        .equals(other.getHDRType())) return false;
    if (!getKeyFrameAlignmentVersion()
        .equals(other.getKeyFrameAlignmentVersion())) return false;
    if (!getUserAction()
        .equals(other.getUserAction())) return false;
    if (!getQuality()
        .equals(other.getQuality())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + VIDS_FIELD_NUMBER;
    hash = (53 * hash) + getVids().hashCode();
    hash = (37 * hash) + FORMATS_FIELD_NUMBER;
    hash = (53 * hash) + getFormats().hashCode();
    hash = (37 * hash) + CODECS_FIELD_NUMBER;
    hash = (53 * hash) + getCodecs().hashCode();
    hash = (37 * hash) + DEFINITIONS_FIELD_NUMBER;
    hash = (53 * hash) + getDefinitions().hashCode();
    hash = (37 * hash) + FILETYPES_FIELD_NUMBER;
    hash = (53 * hash) + getFileTypes().hashCode();
    hash = (37 * hash) + LOGOTYPES_FIELD_NUMBER;
    hash = (53 * hash) + getLogoTypes().hashCode();
    hash = (37 * hash) + NEEDENCRYPTSTREAM_FIELD_NUMBER;
    hash = (53 * hash) + getNeedEncryptStream().hashCode();
    hash = (37 * hash) + SSL_FIELD_NUMBER;
    hash = (53 * hash) + getSsl().hashCode();
    hash = (37 * hash) + NEEDTHUMBS_FIELD_NUMBER;
    hash = (53 * hash) + getNeedThumbs().hashCode();
    hash = (37 * hash) + NEEDBARRAGEMASK_FIELD_NUMBER;
    hash = (53 * hash) + getNeedBarrageMask().hashCode();
    hash = (37 * hash) + CDNTYPE_FIELD_NUMBER;
    hash = (53 * hash) + getCdnType().hashCode();
    hash = (37 * hash) + UNIONINFO_FIELD_NUMBER;
    hash = (53 * hash) + getUnionInfo().hashCode();
    hash = (37 * hash) + PLAYSCENE_FIELD_NUMBER;
    hash = (53 * hash) + getPlayScene().hashCode();
    hash = (37 * hash) + DRMEXPIRETIMESTAMP_FIELD_NUMBER;
    hash = (53 * hash) + getDrmExpireTimestamp().hashCode();
    hash = (37 * hash) + HDRTYPE_FIELD_NUMBER;
    hash = (53 * hash) + getHDRType().hashCode();
    hash = (37 * hash) + KEYFRAMEALIGNMENTVERSION_FIELD_NUMBER;
    hash = (53 * hash) + getKeyFrameAlignmentVersion().hashCode();
    hash = (37 * hash) + USERACTION_FIELD_NUMBER;
    hash = (53 * hash) + getUserAction().hashCode();
    hash = (37 * hash) + QUALITY_FIELD_NUMBER;
    hash = (53 * hash) + getQuality().hashCode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.byteplus.service.vod.model.request.VodGetAllPlayInfoRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.byteplus.service.vod.model.request.VodGetAllPlayInfoRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.byteplus.service.vod.model.request.VodGetAllPlayInfoRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.byteplus.service.vod.model.request.VodGetAllPlayInfoRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.byteplus.service.vod.model.request.VodGetAllPlayInfoRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.byteplus.service.vod.model.request.VodGetAllPlayInfoRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.byteplus.service.vod.model.request.VodGetAllPlayInfoRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.byteplus.service.vod.model.request.VodGetAllPlayInfoRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.byteplus.service.vod.model.request.VodGetAllPlayInfoRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.byteplus.service.vod.model.request.VodGetAllPlayInfoRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.byteplus.service.vod.model.request.VodGetAllPlayInfoRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.byteplus.service.vod.model.request.VodGetAllPlayInfoRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.byteplus.service.vod.model.request.VodGetAllPlayInfoRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * **********************************************************************
   * 播放
   * **********************************************************************
   * </pre>
   *
   * Protobuf type {@code Byteplus.Vod.Models.Request.VodGetAllPlayInfoRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:Byteplus.Vod.Models.Request.VodGetAllPlayInfoRequest)
      com.byteplus.service.vod.model.request.VodGetAllPlayInfoRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.byteplus.service.vod.model.request.VodRequest.internal_static_Byteplus_Vod_Models_Request_VodGetAllPlayInfoRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.byteplus.service.vod.model.request.VodRequest.internal_static_Byteplus_Vod_Models_Request_VodGetAllPlayInfoRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.byteplus.service.vod.model.request.VodGetAllPlayInfoRequest.class, com.byteplus.service.vod.model.request.VodGetAllPlayInfoRequest.Builder.class);
    }

    // Construct using com.byteplus.service.vod.model.request.VodGetAllPlayInfoRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      vids_ = "";

      formats_ = "";

      codecs_ = "";

      definitions_ = "";

      fileTypes_ = "";

      logoTypes_ = "";

      needEncryptStream_ = "";

      ssl_ = "";

      needThumbs_ = "";

      needBarrageMask_ = "";

      cdnType_ = "";

      unionInfo_ = "";

      playScene_ = "";

      drmExpireTimestamp_ = "";

      hDRType_ = "";

      keyFrameAlignmentVersion_ = "";

      userAction_ = "";

      quality_ = "";

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.byteplus.service.vod.model.request.VodRequest.internal_static_Byteplus_Vod_Models_Request_VodGetAllPlayInfoRequest_descriptor;
    }

    @java.lang.Override
    public com.byteplus.service.vod.model.request.VodGetAllPlayInfoRequest getDefaultInstanceForType() {
      return com.byteplus.service.vod.model.request.VodGetAllPlayInfoRequest.getDefaultInstance();
    }

    @java.lang.Override
    public com.byteplus.service.vod.model.request.VodGetAllPlayInfoRequest build() {
      com.byteplus.service.vod.model.request.VodGetAllPlayInfoRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.byteplus.service.vod.model.request.VodGetAllPlayInfoRequest buildPartial() {
      com.byteplus.service.vod.model.request.VodGetAllPlayInfoRequest result = new com.byteplus.service.vod.model.request.VodGetAllPlayInfoRequest(this);
      result.vids_ = vids_;
      result.formats_ = formats_;
      result.codecs_ = codecs_;
      result.definitions_ = definitions_;
      result.fileTypes_ = fileTypes_;
      result.logoTypes_ = logoTypes_;
      result.needEncryptStream_ = needEncryptStream_;
      result.ssl_ = ssl_;
      result.needThumbs_ = needThumbs_;
      result.needBarrageMask_ = needBarrageMask_;
      result.cdnType_ = cdnType_;
      result.unionInfo_ = unionInfo_;
      result.playScene_ = playScene_;
      result.drmExpireTimestamp_ = drmExpireTimestamp_;
      result.hDRType_ = hDRType_;
      result.keyFrameAlignmentVersion_ = keyFrameAlignmentVersion_;
      result.userAction_ = userAction_;
      result.quality_ = quality_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.byteplus.service.vod.model.request.VodGetAllPlayInfoRequest) {
        return mergeFrom((com.byteplus.service.vod.model.request.VodGetAllPlayInfoRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.byteplus.service.vod.model.request.VodGetAllPlayInfoRequest other) {
      if (other == com.byteplus.service.vod.model.request.VodGetAllPlayInfoRequest.getDefaultInstance()) return this;
      if (!other.getVids().isEmpty()) {
        vids_ = other.vids_;
        onChanged();
      }
      if (!other.getFormats().isEmpty()) {
        formats_ = other.formats_;
        onChanged();
      }
      if (!other.getCodecs().isEmpty()) {
        codecs_ = other.codecs_;
        onChanged();
      }
      if (!other.getDefinitions().isEmpty()) {
        definitions_ = other.definitions_;
        onChanged();
      }
      if (!other.getFileTypes().isEmpty()) {
        fileTypes_ = other.fileTypes_;
        onChanged();
      }
      if (!other.getLogoTypes().isEmpty()) {
        logoTypes_ = other.logoTypes_;
        onChanged();
      }
      if (!other.getNeedEncryptStream().isEmpty()) {
        needEncryptStream_ = other.needEncryptStream_;
        onChanged();
      }
      if (!other.getSsl().isEmpty()) {
        ssl_ = other.ssl_;
        onChanged();
      }
      if (!other.getNeedThumbs().isEmpty()) {
        needThumbs_ = other.needThumbs_;
        onChanged();
      }
      if (!other.getNeedBarrageMask().isEmpty()) {
        needBarrageMask_ = other.needBarrageMask_;
        onChanged();
      }
      if (!other.getCdnType().isEmpty()) {
        cdnType_ = other.cdnType_;
        onChanged();
      }
      if (!other.getUnionInfo().isEmpty()) {
        unionInfo_ = other.unionInfo_;
        onChanged();
      }
      if (!other.getPlayScene().isEmpty()) {
        playScene_ = other.playScene_;
        onChanged();
      }
      if (!other.getDrmExpireTimestamp().isEmpty()) {
        drmExpireTimestamp_ = other.drmExpireTimestamp_;
        onChanged();
      }
      if (!other.getHDRType().isEmpty()) {
        hDRType_ = other.hDRType_;
        onChanged();
      }
      if (!other.getKeyFrameAlignmentVersion().isEmpty()) {
        keyFrameAlignmentVersion_ = other.keyFrameAlignmentVersion_;
        onChanged();
      }
      if (!other.getUserAction().isEmpty()) {
        userAction_ = other.userAction_;
        onChanged();
      }
      if (!other.getQuality().isEmpty()) {
        quality_ = other.quality_;
        onChanged();
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.byteplus.service.vod.model.request.VodGetAllPlayInfoRequest parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.byteplus.service.vod.model.request.VodGetAllPlayInfoRequest) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private java.lang.Object vids_ = "";
    /**
     * <pre>
     * 视频ID 
     * </pre>
     *
     * <code>string Vids = 1;</code>
     * @return The vids.
     */
    public java.lang.String getVids() {
      java.lang.Object ref = vids_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        vids_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 视频ID 
     * </pre>
     *
     * <code>string Vids = 1;</code>
     * @return The bytes for vids.
     */
    public com.google.protobuf.ByteString
        getVidsBytes() {
      java.lang.Object ref = vids_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        vids_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 视频ID 
     * </pre>
     *
     * <code>string Vids = 1;</code>
     * @param value The vids to set.
     * @return This builder for chaining.
     */
    public Builder setVids(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      vids_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 视频ID 
     * </pre>
     *
     * <code>string Vids = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearVids() {
      
      vids_ = getDefaultInstance().getVids();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 视频ID 
     * </pre>
     *
     * <code>string Vids = 1;</code>
     * @param value The bytes for vids to set.
     * @return This builder for chaining.
     */
    public Builder setVidsBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      vids_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object formats_ = "";
    /**
     * <pre>
     * 封装格式，支持 mp4、dash、hls、mp3、m4a、ogg。多个Format
     * 组成的字符串，中间用","隔开。默认获取全部
     * </pre>
     *
     * <code>string Formats = 2;</code>
     * @return The formats.
     */
    public java.lang.String getFormats() {
      java.lang.Object ref = formats_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        formats_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 封装格式，支持 mp4、dash、hls、mp3、m4a、ogg。多个Format
     * 组成的字符串，中间用","隔开。默认获取全部
     * </pre>
     *
     * <code>string Formats = 2;</code>
     * @return The bytes for formats.
     */
    public com.google.protobuf.ByteString
        getFormatsBytes() {
      java.lang.Object ref = formats_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        formats_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 封装格式，支持 mp4、dash、hls、mp3、m4a、ogg。多个Format
     * 组成的字符串，中间用","隔开。默认获取全部
     * </pre>
     *
     * <code>string Formats = 2;</code>
     * @param value The formats to set.
     * @return This builder for chaining.
     */
    public Builder setFormats(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      formats_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 封装格式，支持 mp4、dash、hls、mp3、m4a、ogg。多个Format
     * 组成的字符串，中间用","隔开。默认获取全部
     * </pre>
     *
     * <code>string Formats = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearFormats() {
      
      formats_ = getDefaultInstance().getFormats();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 封装格式，支持 mp4、dash、hls、mp3、m4a、ogg。多个Format
     * 组成的字符串，中间用","隔开。默认获取全部
     * </pre>
     *
     * <code>string Formats = 2;</code>
     * @param value The bytes for formats to set.
     * @return This builder for chaining.
     */
    public Builder setFormatsBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      formats_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object codecs_ = "";
    /**
     * <pre>
     * 编码格式，支持 mp3、aac、opus、H264、H265、H266。多个Codec
     * 组成的字符串，中间用","隔开。默认获取全部
     * </pre>
     *
     * <code>string Codecs = 3;</code>
     * @return The codecs.
     */
    public java.lang.String getCodecs() {
      java.lang.Object ref = codecs_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        codecs_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 编码格式，支持 mp3、aac、opus、H264、H265、H266。多个Codec
     * 组成的字符串，中间用","隔开。默认获取全部
     * </pre>
     *
     * <code>string Codecs = 3;</code>
     * @return The bytes for codecs.
     */
    public com.google.protobuf.ByteString
        getCodecsBytes() {
      java.lang.Object ref = codecs_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        codecs_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 编码格式，支持 mp3、aac、opus、H264、H265、H266。多个Codec
     * 组成的字符串，中间用","隔开。默认获取全部
     * </pre>
     *
     * <code>string Codecs = 3;</code>
     * @param value The codecs to set.
     * @return This builder for chaining.
     */
    public Builder setCodecs(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      codecs_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 编码格式，支持 mp3、aac、opus、H264、H265、H266。多个Codec
     * 组成的字符串，中间用","隔开。默认获取全部
     * </pre>
     *
     * <code>string Codecs = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearCodecs() {
      
      codecs_ = getDefaultInstance().getCodecs();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 编码格式，支持 mp3、aac、opus、H264、H265、H266。多个Codec
     * 组成的字符串，中间用","隔开。默认获取全部
     * </pre>
     *
     * <code>string Codecs = 3;</code>
     * @param value The bytes for codecs to set.
     * @return This builder for chaining.
     */
    public Builder setCodecsBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      codecs_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object definitions_ = "";
    /**
     * <pre>
     * 视频流清晰度，默认返回全部，支持：240p，360p，480p，540p，720p，1080p。多个
     * Codec 组成的字符串，中间用","隔开。默认获取全部
     * </pre>
     *
     * <code>string Definitions = 4;</code>
     * @return The definitions.
     */
    public java.lang.String getDefinitions() {
      java.lang.Object ref = definitions_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        definitions_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 视频流清晰度，默认返回全部，支持：240p，360p，480p，540p，720p，1080p。多个
     * Codec 组成的字符串，中间用","隔开。默认获取全部
     * </pre>
     *
     * <code>string Definitions = 4;</code>
     * @return The bytes for definitions.
     */
    public com.google.protobuf.ByteString
        getDefinitionsBytes() {
      java.lang.Object ref = definitions_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        definitions_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 视频流清晰度，默认返回全部，支持：240p，360p，480p，540p，720p，1080p。多个
     * Codec 组成的字符串，中间用","隔开。默认获取全部
     * </pre>
     *
     * <code>string Definitions = 4;</code>
     * @param value The definitions to set.
     * @return This builder for chaining.
     */
    public Builder setDefinitions(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      definitions_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 视频流清晰度，默认返回全部，支持：240p，360p，480p，540p，720p，1080p。多个
     * Codec 组成的字符串，中间用","隔开。默认获取全部
     * </pre>
     *
     * <code>string Definitions = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearDefinitions() {
      
      definitions_ = getDefaultInstance().getDefinitions();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 视频流清晰度，默认返回全部，支持：240p，360p，480p，540p，720p，1080p。多个
     * Codec 组成的字符串，中间用","隔开。默认获取全部
     * </pre>
     *
     * <code>string Definitions = 4;</code>
     * @param value The bytes for definitions to set.
     * @return This builder for chaining.
     */
    public Builder setDefinitionsBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      definitions_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object fileTypes_ = "";
    /**
     * <pre>
     * 流文件类型。支持：video-视频流, audio-音频流。
     * 多个 FileType 组成的字符串，中间用","隔开。默认获取全部类型
     * </pre>
     *
     * <code>string FileTypes = 5;</code>
     * @return The fileTypes.
     */
    public java.lang.String getFileTypes() {
      java.lang.Object ref = fileTypes_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        fileTypes_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 流文件类型。支持：video-视频流, audio-音频流。
     * 多个 FileType 组成的字符串，中间用","隔开。默认获取全部类型
     * </pre>
     *
     * <code>string FileTypes = 5;</code>
     * @return The bytes for fileTypes.
     */
    public com.google.protobuf.ByteString
        getFileTypesBytes() {
      java.lang.Object ref = fileTypes_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fileTypes_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 流文件类型。支持：video-视频流, audio-音频流。
     * 多个 FileType 组成的字符串，中间用","隔开。默认获取全部类型
     * </pre>
     *
     * <code>string FileTypes = 5;</code>
     * @param value The fileTypes to set.
     * @return This builder for chaining.
     */
    public Builder setFileTypes(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      fileTypes_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 流文件类型。支持：video-视频流, audio-音频流。
     * 多个 FileType 组成的字符串，中间用","隔开。默认获取全部类型
     * </pre>
     *
     * <code>string FileTypes = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearFileTypes() {
      
      fileTypes_ = getDefaultInstance().getFileTypes();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 流文件类型。支持：video-视频流, audio-音频流。
     * 多个 FileType 组成的字符串，中间用","隔开。默认获取全部类型
     * </pre>
     *
     * <code>string FileTypes = 5;</code>
     * @param value The bytes for fileTypes to set.
     * @return This builder for chaining.
     */
    public Builder setFileTypesBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      fileTypes_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object logoTypes_ = "";
    /**
     * <pre>
     * 水印贴片标签 
     * </pre>
     *
     * <code>string LogoTypes = 6;</code>
     * @return The logoTypes.
     */
    public java.lang.String getLogoTypes() {
      java.lang.Object ref = logoTypes_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        logoTypes_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 水印贴片标签 
     * </pre>
     *
     * <code>string LogoTypes = 6;</code>
     * @return The bytes for logoTypes.
     */
    public com.google.protobuf.ByteString
        getLogoTypesBytes() {
      java.lang.Object ref = logoTypes_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        logoTypes_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 水印贴片标签 
     * </pre>
     *
     * <code>string LogoTypes = 6;</code>
     * @param value The logoTypes to set.
     * @return This builder for chaining.
     */
    public Builder setLogoTypes(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      logoTypes_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 水印贴片标签 
     * </pre>
     *
     * <code>string LogoTypes = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearLogoTypes() {
      
      logoTypes_ = getDefaultInstance().getLogoTypes();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 水印贴片标签 
     * </pre>
     *
     * <code>string LogoTypes = 6;</code>
     * @param value The bytes for logoTypes to set.
     * @return This builder for chaining.
     */
    public Builder setLogoTypesBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      logoTypes_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object needEncryptStream_ = "";
    /**
     * <pre>
     * 是否加密, 支持: "encrypt"-加密流, "normal"-非加密流, 默认返回全部 
     * </pre>
     *
     * <code>string NeedEncryptStream = 7;</code>
     * @return The needEncryptStream.
     */
    public java.lang.String getNeedEncryptStream() {
      java.lang.Object ref = needEncryptStream_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        needEncryptStream_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 是否加密, 支持: "encrypt"-加密流, "normal"-非加密流, 默认返回全部 
     * </pre>
     *
     * <code>string NeedEncryptStream = 7;</code>
     * @return The bytes for needEncryptStream.
     */
    public com.google.protobuf.ByteString
        getNeedEncryptStreamBytes() {
      java.lang.Object ref = needEncryptStream_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        needEncryptStream_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 是否加密, 支持: "encrypt"-加密流, "normal"-非加密流, 默认返回全部 
     * </pre>
     *
     * <code>string NeedEncryptStream = 7;</code>
     * @param value The needEncryptStream to set.
     * @return This builder for chaining.
     */
    public Builder setNeedEncryptStream(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      needEncryptStream_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 是否加密, 支持: "encrypt"-加密流, "normal"-非加密流, 默认返回全部 
     * </pre>
     *
     * <code>string NeedEncryptStream = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearNeedEncryptStream() {
      
      needEncryptStream_ = getDefaultInstance().getNeedEncryptStream();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 是否加密, 支持: "encrypt"-加密流, "normal"-非加密流, 默认返回全部 
     * </pre>
     *
     * <code>string NeedEncryptStream = 7;</code>
     * @param value The bytes for needEncryptStream to set.
     * @return This builder for chaining.
     */
    public Builder setNeedEncryptStreamBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      needEncryptStream_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object ssl_ = "";
    /**
     * <pre>
     * 返回https播放地址，默认否, 1-是；0-否 
     * </pre>
     *
     * <code>string Ssl = 8;</code>
     * @return The ssl.
     */
    public java.lang.String getSsl() {
      java.lang.Object ref = ssl_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        ssl_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 返回https播放地址，默认否, 1-是；0-否 
     * </pre>
     *
     * <code>string Ssl = 8;</code>
     * @return The bytes for ssl.
     */
    public com.google.protobuf.ByteString
        getSslBytes() {
      java.lang.Object ref = ssl_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ssl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 返回https播放地址，默认否, 1-是；0-否 
     * </pre>
     *
     * <code>string Ssl = 8;</code>
     * @param value The ssl to set.
     * @return This builder for chaining.
     */
    public Builder setSsl(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      ssl_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 返回https播放地址，默认否, 1-是；0-否 
     * </pre>
     *
     * <code>string Ssl = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearSsl() {
      
      ssl_ = getDefaultInstance().getSsl();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 返回https播放地址，默认否, 1-是；0-否 
     * </pre>
     *
     * <code>string Ssl = 8;</code>
     * @param value The bytes for ssl to set.
     * @return This builder for chaining.
     */
    public Builder setSslBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      ssl_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object needThumbs_ = "";
    /**
     * <pre>
     * 是否需要雪碧图（缩略图），默认否，1-是；0-否 
     * </pre>
     *
     * <code>string NeedThumbs = 9;</code>
     * @return The needThumbs.
     */
    public java.lang.String getNeedThumbs() {
      java.lang.Object ref = needThumbs_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        needThumbs_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 是否需要雪碧图（缩略图），默认否，1-是；0-否 
     * </pre>
     *
     * <code>string NeedThumbs = 9;</code>
     * @return The bytes for needThumbs.
     */
    public com.google.protobuf.ByteString
        getNeedThumbsBytes() {
      java.lang.Object ref = needThumbs_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        needThumbs_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 是否需要雪碧图（缩略图），默认否，1-是；0-否 
     * </pre>
     *
     * <code>string NeedThumbs = 9;</code>
     * @param value The needThumbs to set.
     * @return This builder for chaining.
     */
    public Builder setNeedThumbs(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      needThumbs_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 是否需要雪碧图（缩略图），默认否，1-是；0-否 
     * </pre>
     *
     * <code>string NeedThumbs = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearNeedThumbs() {
      
      needThumbs_ = getDefaultInstance().getNeedThumbs();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 是否需要雪碧图（缩略图），默认否，1-是；0-否 
     * </pre>
     *
     * <code>string NeedThumbs = 9;</code>
     * @param value The bytes for needThumbs to set.
     * @return This builder for chaining.
     */
    public Builder setNeedThumbsBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      needThumbs_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object needBarrageMask_ = "";
    /**
     * <pre>
     * 是否需要蒙版弹幕，默认否，1-是；0-否 
     * </pre>
     *
     * <code>string NeedBarrageMask = 10;</code>
     * @return The needBarrageMask.
     */
    public java.lang.String getNeedBarrageMask() {
      java.lang.Object ref = needBarrageMask_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        needBarrageMask_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 是否需要蒙版弹幕，默认否，1-是；0-否 
     * </pre>
     *
     * <code>string NeedBarrageMask = 10;</code>
     * @return The bytes for needBarrageMask.
     */
    public com.google.protobuf.ByteString
        getNeedBarrageMaskBytes() {
      java.lang.Object ref = needBarrageMask_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        needBarrageMask_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 是否需要蒙版弹幕，默认否，1-是；0-否 
     * </pre>
     *
     * <code>string NeedBarrageMask = 10;</code>
     * @param value The needBarrageMask to set.
     * @return This builder for chaining.
     */
    public Builder setNeedBarrageMask(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      needBarrageMask_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 是否需要蒙版弹幕，默认否，1-是；0-否 
     * </pre>
     *
     * <code>string NeedBarrageMask = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearNeedBarrageMask() {
      
      needBarrageMask_ = getDefaultInstance().getNeedBarrageMask();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 是否需要蒙版弹幕，默认否，1-是；0-否 
     * </pre>
     *
     * <code>string NeedBarrageMask = 10;</code>
     * @param value The bytes for needBarrageMask to set.
     * @return This builder for chaining.
     */
    public Builder setNeedBarrageMaskBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      needBarrageMask_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object cdnType_ = "";
    /**
     * <pre>
     * 指定CDN类型, 默认不传为普通CDN, 若需使用请联系技术支持 
     * </pre>
     *
     * <code>string CdnType = 11;</code>
     * @return The cdnType.
     */
    public java.lang.String getCdnType() {
      java.lang.Object ref = cdnType_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        cdnType_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 指定CDN类型, 默认不传为普通CDN, 若需使用请联系技术支持 
     * </pre>
     *
     * <code>string CdnType = 11;</code>
     * @return The bytes for cdnType.
     */
    public com.google.protobuf.ByteString
        getCdnTypeBytes() {
      java.lang.Object ref = cdnType_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        cdnType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 指定CDN类型, 默认不传为普通CDN, 若需使用请联系技术支持 
     * </pre>
     *
     * <code>string CdnType = 11;</code>
     * @param value The cdnType to set.
     * @return This builder for chaining.
     */
    public Builder setCdnType(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      cdnType_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 指定CDN类型, 默认不传为普通CDN, 若需使用请联系技术支持 
     * </pre>
     *
     * <code>string CdnType = 11;</code>
     * @return This builder for chaining.
     */
    public Builder clearCdnType() {
      
      cdnType_ = getDefaultInstance().getCdnType();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 指定CDN类型, 默认不传为普通CDN, 若需使用请联系技术支持 
     * </pre>
     *
     * <code>string CdnType = 11;</code>
     * @param value The bytes for cdnType to set.
     * @return This builder for chaining.
     */
    public Builder setCdnTypeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      cdnType_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object unionInfo_ = "";
    /**
     * <pre>
     * 唯一性标识信息, 若需使用请联系技术支持 
     * </pre>
     *
     * <code>string UnionInfo = 12;</code>
     * @return The unionInfo.
     */
    public java.lang.String getUnionInfo() {
      java.lang.Object ref = unionInfo_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        unionInfo_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 唯一性标识信息, 若需使用请联系技术支持 
     * </pre>
     *
     * <code>string UnionInfo = 12;</code>
     * @return The bytes for unionInfo.
     */
    public com.google.protobuf.ByteString
        getUnionInfoBytes() {
      java.lang.Object ref = unionInfo_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        unionInfo_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 唯一性标识信息, 若需使用请联系技术支持 
     * </pre>
     *
     * <code>string UnionInfo = 12;</code>
     * @param value The unionInfo to set.
     * @return This builder for chaining.
     */
    public Builder setUnionInfo(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      unionInfo_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 唯一性标识信息, 若需使用请联系技术支持 
     * </pre>
     *
     * <code>string UnionInfo = 12;</code>
     * @return This builder for chaining.
     */
    public Builder clearUnionInfo() {
      
      unionInfo_ = getDefaultInstance().getUnionInfo();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 唯一性标识信息, 若需使用请联系技术支持 
     * </pre>
     *
     * <code>string UnionInfo = 12;</code>
     * @param value The bytes for unionInfo to set.
     * @return This builder for chaining.
     */
    public Builder setUnionInfoBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      unionInfo_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object playScene_ = "";
    /**
     * <pre>
     * 播放场景，指定获取对应场景的音视频流。当前支持：preview-试看 
     * </pre>
     *
     * <code>string PlayScene = 13;</code>
     * @return The playScene.
     */
    public java.lang.String getPlayScene() {
      java.lang.Object ref = playScene_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        playScene_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 播放场景，指定获取对应场景的音视频流。当前支持：preview-试看 
     * </pre>
     *
     * <code>string PlayScene = 13;</code>
     * @return The bytes for playScene.
     */
    public com.google.protobuf.ByteString
        getPlaySceneBytes() {
      java.lang.Object ref = playScene_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        playScene_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 播放场景，指定获取对应场景的音视频流。当前支持：preview-试看 
     * </pre>
     *
     * <code>string PlayScene = 13;</code>
     * @param value The playScene to set.
     * @return This builder for chaining.
     */
    public Builder setPlayScene(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      playScene_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 播放场景，指定获取对应场景的音视频流。当前支持：preview-试看 
     * </pre>
     *
     * <code>string PlayScene = 13;</code>
     * @return This builder for chaining.
     */
    public Builder clearPlayScene() {
      
      playScene_ = getDefaultInstance().getPlayScene();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 播放场景，指定获取对应场景的音视频流。当前支持：preview-试看 
     * </pre>
     *
     * <code>string PlayScene = 13;</code>
     * @param value The bytes for playScene to set.
     * @return This builder for chaining.
     */
    public Builder setPlaySceneBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      playScene_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object drmExpireTimestamp_ = "";
    /**
     * <pre>
     * DRM过期时间戳, 若需使用请联系技术支持 
     * </pre>
     *
     * <code>string DrmExpireTimestamp = 14;</code>
     * @return The drmExpireTimestamp.
     */
    public java.lang.String getDrmExpireTimestamp() {
      java.lang.Object ref = drmExpireTimestamp_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        drmExpireTimestamp_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * DRM过期时间戳, 若需使用请联系技术支持 
     * </pre>
     *
     * <code>string DrmExpireTimestamp = 14;</code>
     * @return The bytes for drmExpireTimestamp.
     */
    public com.google.protobuf.ByteString
        getDrmExpireTimestampBytes() {
      java.lang.Object ref = drmExpireTimestamp_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        drmExpireTimestamp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * DRM过期时间戳, 若需使用请联系技术支持 
     * </pre>
     *
     * <code>string DrmExpireTimestamp = 14;</code>
     * @param value The drmExpireTimestamp to set.
     * @return This builder for chaining.
     */
    public Builder setDrmExpireTimestamp(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      drmExpireTimestamp_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * DRM过期时间戳, 若需使用请联系技术支持 
     * </pre>
     *
     * <code>string DrmExpireTimestamp = 14;</code>
     * @return This builder for chaining.
     */
    public Builder clearDrmExpireTimestamp() {
      
      drmExpireTimestamp_ = getDefaultInstance().getDrmExpireTimestamp();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * DRM过期时间戳, 若需使用请联系技术支持 
     * </pre>
     *
     * <code>string DrmExpireTimestamp = 14;</code>
     * @param value The bytes for drmExpireTimestamp to set.
     * @return This builder for chaining.
     */
    public Builder setDrmExpireTimestampBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      drmExpireTimestamp_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object hDRType_ = "";
    /**
     * <pre>
     * 默认获取全部。支持: "SDR", "PQHDR", "SLGHDR", 默认返回全部 
     * </pre>
     *
     * <code>string HDRType = 15;</code>
     * @return The hDRType.
     */
    public java.lang.String getHDRType() {
      java.lang.Object ref = hDRType_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        hDRType_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 默认获取全部。支持: "SDR", "PQHDR", "SLGHDR", 默认返回全部 
     * </pre>
     *
     * <code>string HDRType = 15;</code>
     * @return The bytes for hDRType.
     */
    public com.google.protobuf.ByteString
        getHDRTypeBytes() {
      java.lang.Object ref = hDRType_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        hDRType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 默认获取全部。支持: "SDR", "PQHDR", "SLGHDR", 默认返回全部 
     * </pre>
     *
     * <code>string HDRType = 15;</code>
     * @param value The hDRType to set.
     * @return This builder for chaining.
     */
    public Builder setHDRType(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      hDRType_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 默认获取全部。支持: "SDR", "PQHDR", "SLGHDR", 默认返回全部 
     * </pre>
     *
     * <code>string HDRType = 15;</code>
     * @return This builder for chaining.
     */
    public Builder clearHDRType() {
      
      hDRType_ = getDefaultInstance().getHDRType();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 默认获取全部。支持: "SDR", "PQHDR", "SLGHDR", 默认返回全部 
     * </pre>
     *
     * <code>string HDRType = 15;</code>
     * @param value The bytes for hDRType to set.
     * @return This builder for chaining.
     */
    public Builder setHDRTypeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      hDRType_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object keyFrameAlignmentVersion_ = "";
    /**
     * <pre>
     * 使用的帧对齐转码版本。支持: "1"-返回版本一, 默认不指定版本，全部返回 
     * </pre>
     *
     * <code>string KeyFrameAlignmentVersion = 16;</code>
     * @return The keyFrameAlignmentVersion.
     */
    public java.lang.String getKeyFrameAlignmentVersion() {
      java.lang.Object ref = keyFrameAlignmentVersion_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        keyFrameAlignmentVersion_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 使用的帧对齐转码版本。支持: "1"-返回版本一, 默认不指定版本，全部返回 
     * </pre>
     *
     * <code>string KeyFrameAlignmentVersion = 16;</code>
     * @return The bytes for keyFrameAlignmentVersion.
     */
    public com.google.protobuf.ByteString
        getKeyFrameAlignmentVersionBytes() {
      java.lang.Object ref = keyFrameAlignmentVersion_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        keyFrameAlignmentVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 使用的帧对齐转码版本。支持: "1"-返回版本一, 默认不指定版本，全部返回 
     * </pre>
     *
     * <code>string KeyFrameAlignmentVersion = 16;</code>
     * @param value The keyFrameAlignmentVersion to set.
     * @return This builder for chaining.
     */
    public Builder setKeyFrameAlignmentVersion(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      keyFrameAlignmentVersion_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 使用的帧对齐转码版本。支持: "1"-返回版本一, 默认不指定版本，全部返回 
     * </pre>
     *
     * <code>string KeyFrameAlignmentVersion = 16;</code>
     * @return This builder for chaining.
     */
    public Builder clearKeyFrameAlignmentVersion() {
      
      keyFrameAlignmentVersion_ = getDefaultInstance().getKeyFrameAlignmentVersion();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 使用的帧对齐转码版本。支持: "1"-返回版本一, 默认不指定版本，全部返回 
     * </pre>
     *
     * <code>string KeyFrameAlignmentVersion = 16;</code>
     * @param value The bytes for keyFrameAlignmentVersion to set.
     * @return This builder for chaining.
     */
    public Builder setKeyFrameAlignmentVersionBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      keyFrameAlignmentVersion_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object userAction_ = "";
    /**
     * <pre>
     * 发布状态, 支持: "Available"-发布, "NoAction"-未发布, 默认返回全部 
     * </pre>
     *
     * <code>string UserAction = 17;</code>
     * @return The userAction.
     */
    public java.lang.String getUserAction() {
      java.lang.Object ref = userAction_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        userAction_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 发布状态, 支持: "Available"-发布, "NoAction"-未发布, 默认返回全部 
     * </pre>
     *
     * <code>string UserAction = 17;</code>
     * @return The bytes for userAction.
     */
    public com.google.protobuf.ByteString
        getUserActionBytes() {
      java.lang.Object ref = userAction_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        userAction_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 发布状态, 支持: "Available"-发布, "NoAction"-未发布, 默认返回全部 
     * </pre>
     *
     * <code>string UserAction = 17;</code>
     * @param value The userAction to set.
     * @return This builder for chaining.
     */
    public Builder setUserAction(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      userAction_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 发布状态, 支持: "Available"-发布, "NoAction"-未发布, 默认返回全部 
     * </pre>
     *
     * <code>string UserAction = 17;</code>
     * @return This builder for chaining.
     */
    public Builder clearUserAction() {
      
      userAction_ = getDefaultInstance().getUserAction();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 发布状态, 支持: "Available"-发布, "NoAction"-未发布, 默认返回全部 
     * </pre>
     *
     * <code>string UserAction = 17;</code>
     * @param value The bytes for userAction to set.
     * @return This builder for chaining.
     */
    public Builder setUserActionBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      userAction_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object quality_ = "";
    /**
     * <pre>
     * 音频音质。当 FileType 为
     * audio时起作用，表示音频音质参数。支持：medium、higher、highest.默认返回所有音频流
     * </pre>
     *
     * <code>string Quality = 18;</code>
     * @return The quality.
     */
    public java.lang.String getQuality() {
      java.lang.Object ref = quality_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        quality_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 音频音质。当 FileType 为
     * audio时起作用，表示音频音质参数。支持：medium、higher、highest.默认返回所有音频流
     * </pre>
     *
     * <code>string Quality = 18;</code>
     * @return The bytes for quality.
     */
    public com.google.protobuf.ByteString
        getQualityBytes() {
      java.lang.Object ref = quality_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        quality_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 音频音质。当 FileType 为
     * audio时起作用，表示音频音质参数。支持：medium、higher、highest.默认返回所有音频流
     * </pre>
     *
     * <code>string Quality = 18;</code>
     * @param value The quality to set.
     * @return This builder for chaining.
     */
    public Builder setQuality(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      quality_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 音频音质。当 FileType 为
     * audio时起作用，表示音频音质参数。支持：medium、higher、highest.默认返回所有音频流
     * </pre>
     *
     * <code>string Quality = 18;</code>
     * @return This builder for chaining.
     */
    public Builder clearQuality() {
      
      quality_ = getDefaultInstance().getQuality();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 音频音质。当 FileType 为
     * audio时起作用，表示音频音质参数。支持：medium、higher、highest.默认返回所有音频流
     * </pre>
     *
     * <code>string Quality = 18;</code>
     * @param value The bytes for quality to set.
     * @return This builder for chaining.
     */
    public Builder setQualityBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      quality_ = value;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:Byteplus.Vod.Models.Request.VodGetAllPlayInfoRequest)
  }

  // @@protoc_insertion_point(class_scope:Byteplus.Vod.Models.Request.VodGetAllPlayInfoRequest)
  private static final com.byteplus.service.vod.model.request.VodGetAllPlayInfoRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.byteplus.service.vod.model.request.VodGetAllPlayInfoRequest();
  }

  public static com.byteplus.service.vod.model.request.VodGetAllPlayInfoRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<VodGetAllPlayInfoRequest>
      PARSER = new com.google.protobuf.AbstractParser<VodGetAllPlayInfoRequest>() {
    @java.lang.Override
    public VodGetAllPlayInfoRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new VodGetAllPlayInfoRequest(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<VodGetAllPlayInfoRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<VodGetAllPlayInfoRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.byteplus.service.vod.model.request.VodGetAllPlayInfoRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

